name: CI â€” tests only (testing branch)

on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Start only what's needed for tests. We run all DBs + product_service
      # so order_service tests can call the product API if they need to.
      - name: Start compose services required for tests
        run: |
          docker compose up -d --build product_db order_db customer_db product_service

      - name: Wait for Postgres containers to be ready
        run: |
          docker compose ps
          for c in product_db_container order_db_container customer_db_container; do
            echo "Waiting for $c ..."
            for i in {1..30}; do
              if docker exec "$c" pg_isready -U postgres >/dev/null 2>&1; then
                echo "$c is ready"
                break
              fi
              sleep 2
            done
          done

      - name: Create venv & install dev dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -U pip
          pip install -r backend/product_service/requirements-dev.txt
          pip install -r backend/order_service/requirements-dev.txt
          pip install -r backend/customer_service/requirements-dev.txt

      - name: Run product_service tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: '5432'
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          source .venv/bin/activate
          cd backend/product_service
          pytest -q

      - name: Run order_service tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: '5433'
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          PRODUCT_SERVICE_URL: http://localhost:8000
        run: |
          source .venv/bin/activate
          cd backend/order_service
          pytest -q

      - name: Run customer_service tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: '5434'
          POSTGRES_DB: customers
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          source .venv/bin/activate
          cd backend/customer_service
          pytest -q

      - name: Tear down compose (always)
        if: always()
        run: docker compose down -v

